const { restoreUserState } = require("./keyRetrieval");
const { hash2, computeHashOnElements } = require("./crypto_hash");
const {
  SERVER_URL,
  DECIMALS_PER_ASSET,
  PRICE_DECIMALS_PER_ASSET,
  DUST_AMOUNT_PER_ASSET,
  LEVERAGE_DECIMALS,
  COLLATERAL_TOKEN_DECIMALS,
  COLLATERAL_TOKEN,
  get_max_leverage,
  MAX_LEVERAGE,
  handleSwapResult,
  handlePerpSwapResult,
  handleNoteSplit,
  handleFillResult,
  handleLiquidityUpdate,
  fetchLiquidity,
  loginUser,
  SYMBOLS_TO_IDS,
  IDS_TO_SYMBOLS,
  CHAIN_IDS,
  PERP_MARKET_IDS,
  SPOT_MARKET_IDS,
  SPOT_MARKET_IDS_2_TOKENS,
  PERP_MARKET_IDS_2_TOKENS,
} = require("./utils");

const { getLiquidatablePositions } = require("./firebase/firebaseConnection");

module.exports = {
  restoreUserState,
  hash2,
  computeHashOnElements,
  SERVER_URL,
  DECIMALS_PER_ASSET,
  PRICE_DECIMALS_PER_ASSET,
  DUST_AMOUNT_PER_ASSET,
  LEVERAGE_DECIMALS,
  COLLATERAL_TOKEN_DECIMALS,
  COLLATERAL_TOKEN,
  get_max_leverage,
  MAX_LEVERAGE,
  handleSwapResult,
  handlePerpSwapResult,
  handleNoteSplit,
  handleFillResult,
  handleLiquidityUpdate,
  fetchLiquidity,
  loginUser,
  SYMBOLS_TO_IDS,
  IDS_TO_SYMBOLS,
  CHAIN_IDS,
  PERP_MARKET_IDS,
  SPOT_MARKET_IDS,
  SPOT_MARKET_IDS_2_TOKENS,
  PERP_MARKET_IDS_2_TOKENS,
  getLiquidatablePositions,
};
